package frc.team1918.paths;

import frc.team1918.lib.control.SwerveTrajectory;

public class ThreeTwoMetersForward extends Path {
   private final static double[][] points = {
       {0,0.0,0.0,0.0,-0.0,0.0,0.0},
       {0.0248,-0.0,0.0,0.0,0.0565,-0.0,-0.0},
       {0.0496,0.0014,-0.0,-0.0,0.113,-0.0,-0.0},
       {0.0744,0.0042,-0.0,-0.0,0.1694,0.0,-0.0},
       {0.0992,0.0084,-0.0,-0.0,0.2259,-0.0,-0.0},
       {0.1239,0.014,-0.0,-0.0,0.2824,-0.0,-0.0},
       {0.1487,0.021,-0.0,-0.0,0.3389,-0.0,-0.0},
       {0.1735,0.0294,-0.0,-0.0,0.3953,0.0,0.0},
       {0.1983,0.0392,-0.0,-0.0,0.4518,0.0,0.0},
       {0.2231,0.0504,-0.0,-0.0,0.5083,0.0,0.0},
       {0.2479,0.063,0.0,-0.0,0.5648,0.0,0.0},
       {0.2727,0.077,0.0,0.0,0.6213,0.0,0.0},
       {0.2975,0.0924,0.0,0.0,0.6777,0.0,0.0},
       {0.3223,0.1092,0.0,0.0,0.7342,0.0,0.0},
       {0.347,0.1274,0.0,0.0,0.7907,0.0,0.0},
       {0.3718,0.147,0.0,0.0,0.8472,0.0,0.0},
       {0.3966,0.168,0.0,0.0,0.9036,0.0,0.0},
       {0.4214,0.1904,0.0,0.0,0.9601,0.0,0.0},
       {0.4462,0.2142,0.0,0.0,1.0166,0.0,0.0},
       {0.471,0.2394,0.0,0.0,1.0731,0.0,0.0},
       {0.4958,0.266,0.0,0.0,1.1296,0.0,0.0},
       {0.5206,0.294,0.0,0.0,1.186,0.0,0.0},
       {0.5453,0.3234,0.0,0.0,1.2425,0.0,0.0},
       {0.5701,0.3542,0.0,0.0,1.299,0.0,0.0},
       {0.5949,0.3864,0.0,0.0,1.3555,0.0,0.0},
       {0.6197,0.42,0.0,0.0,1.4119,0.0,0.0},
       {0.6445,0.455,0.0,0.0,1.4684,0.0,0.0},
       {0.6693,0.4914,0.0,0.0,1.5249,0.0,0.0},
       {0.6941,0.5292,0.0,0.0,1.5814,0.0,0.0},
       {0.7189,0.5684,0.0,0.0,1.6379,0.0,0.0},
       {0.7437,0.609,0.0,0.0,1.6943,0.0,0.0},
       {0.7684,0.651,0.0,0.0,1.7508,0.0,0.0},
       {0.7932,0.6944,0.0,0.0,1.8073,0.0,0.0},
       {0.818,0.7392,0.0,0.0,1.8638,0.0,0.0},
       {0.8428,0.7854,0.0,0.0,1.9202,0.0,0.0},
       {0.8676,0.833,0.0,0.0,1.9767,0.0,0.0},
       {0.8924,0.882,0.0,0.0,2.0332,0.0,0.0},
       {0.9172,0.9324,0.0,0.0,2.0897,0.0,0.0},
       {0.942,0.9842,0.0,0.0,2.1462,0.0,-0.0},
       {0.9668,1.0374,0.0,0.0,2.2026,0.0,0.0},
       {0.9915,1.092,0.0,0.0,2.2591,0.0,-0.0},
       {1.0163,1.148,0.0,0.0,2.3156,0.0,-0.0},
       {1.0411,1.2054,0.0,0.0,2.3721,0.0,-0.0},
       {1.0659,1.2642,0.0,0.0,2.4285,0.0,-0.0},
       {1.0907,1.3244,0.0,0.0,2.485,0.0,-0.0},
       {1.1155,1.386,0.0,0.0,2.5415,0.0,-0.0},
       {1.1403,1.449,0.0,0.0,2.598,0.0,-0.0},
       {1.1651,1.5134,0.0,0.0,2.6544,0.0,-0.0},
       {1.1899,1.5792,0.0,0.0,2.7109,-0.0,-0.0},
       {1.2146,1.6464,0.0,0.0,2.7674,-0.0,-0.0},
       {1.2394,1.715,0.0,0.0,2.8239,-0.0,-0.0},
       {1.2642,1.785,0.0,0.0,2.7674,-0.0,-0.0},
       {1.289,1.8536,0.0,0.0,2.7109,-0.0,-0.0},
       {1.3138,1.9208,0.0,0.0,2.6544,-0.0,-0.0},
       {1.3386,1.9866,0.0,0.0,2.598,-0.0,-0.0},
       {1.3634,2.051,0.0,0.0,2.5415,-0.0,-0.0},
       {1.3882,2.114,0.0,-0.0,2.485,-0.0,-0.0},
       {1.4129,2.1756,0.0,-0.0,2.4285,-0.0,-0.0},
       {1.4377,2.2358,0.0,-0.0,2.3721,-0.0,-0.0},
       {1.4625,2.2946,0.0,-0.0,2.3156,-0.0,-0.0},
       {1.4873,2.352,0.0,-0.0,2.2591,-0.0,-0.0},
       {1.5121,2.408,0.0,-0.0,2.2026,-0.0,-0.0},
       {1.5369,2.4626,0.0,-0.0,2.1462,-0.0,-0.0},
       {1.5617,2.5158,0.0,-0.0,2.0897,-0.0,-0.0},
       {1.5865,2.5676,0.0,-0.0,2.0332,-0.0,-0.0},
       {1.6113,2.618,0.0,-0.0,1.9767,-0.0,0.0},
       {1.636,2.667,0.0,-0.0,1.9202,-0.0,0.0},
       {1.6608,2.7146,0.0,-0.0,1.8638,-0.0,0.0},
       {1.6856,2.7608,0.0,-0.0,1.8073,-0.0,0.0},
       {1.7104,2.8056,0.0,-0.0,1.7508,-0.0,0.0},
       {1.7352,2.849,0.0,-0.0,1.6943,-0.0,0.0},
       {1.76,2.891,0.0,-0.0,1.6379,-0.0,0.0},
       {1.7848,2.9316,0.0,-0.0,1.5814,-0.0,0.0},
       {1.8096,2.9708,0.0,-0.0,1.5249,-0.0,0.0},
       {1.8344,3.0086,0.0,-0.0,1.4684,-0.0,-0.0},
       {1.8591,3.045,0.0,-0.0,1.4119,-0.0,0.0},
       {1.8839,3.08,0.0,-0.0,1.3555,-0.0,-0.0},
       {1.9087,3.1136,0.0,-0.0,1.299,-0.0,0.0},
       {1.9335,3.1458,0.0,-0.0,1.2425,-0.0,-0.0},
       {1.9583,3.1766,0.0,-0.0,1.186,-0.0,-0.0},
       {1.9831,3.206,0.0,-0.0,1.1296,-0.0,-0.0},
       {2.0079,3.234,0.0,-0.0,1.0731,-0.0,0.0},
       {2.0327,3.2606,0.0,-0.0,1.0166,-0.0,0.0},
       {2.0575,3.2858,0.0,-0.0,0.9601,-0.0,0.0},
       {2.0822,3.3096,0.0,-0.0,0.9036,-0.0,0.0},
       {2.107,3.332,0.0,-0.0,0.8472,-0.0,0.0},
       {2.1318,3.353,0.0,-0.0,0.7907,-0.0,0.0},
       {2.1566,3.3726,0.0,-0.0,0.7342,-0.0,0.0},
       {2.1814,3.3908,0.0,-0.0,0.6777,-0.0,0.0},
       {2.2062,3.4076,0.0,-0.0,0.6213,-0.0,0.0},
       {2.231,3.423,0.0,-0.0,0.5648,-0.0,0.0},
       {2.2558,3.437,0.0,0.0,0.5083,-0.0,0.0},
       {2.2805,3.4496,0.0,0.0,0.4518,-0.0,0.0},
       {2.3053,3.4608,0.0,0.0,0.3953,-0.0,0.0},
       {2.3301,3.4706,0.0,0.0,0.3389,-0.0,-0.0},
       {2.3549,3.479,0.0,0.0,0.2824,-0.0,-0.0},
       {2.3797,3.486,0.0,0.0,0.2259,-0.0,-0.0},
       {2.4045,3.4916,0.0,0.0,0.1694,-0.0,-0.0},
       {2.4293,3.4958,0.0,0.0,0.113,-0.0,-0.0},
       {2.4541,3.4986,0.0,0.0,0.0565,-0.0,-0.0},
       {2.4789,3.5,0.0,0.0,0.0,0.0,0.0},
   };
   public SwerveTrajectory getPath() {
       return new SwerveTrajectory(points);
   }
}
